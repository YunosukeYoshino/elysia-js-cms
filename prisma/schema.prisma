generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int            @id @default(autoincrement())
  email                String         @unique
  password             String
  name                 String?
  role                 String         @default("user")
  loginAttempts        Int            @default(0)
  lockedUntil          DateTime?
  passwordResetToken   String?
  passwordResetExpires DateTime?
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  files                File[]
  posts                Post[]
  refreshTokens        RefreshToken[]
}

model Post {
  id         Int              @id @default(autoincrement())
  title      String
  content    String
  published  Boolean          @default(false)
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  authorId   Int
  categories CategoryOnPost[]
  author     User             @relation(fields: [authorId], references: [id])
}

model Category {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  slug      String           @unique
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  posts     CategoryOnPost[]
}

model CategoryOnPost {
  postId     Int
  categoryId Int
  assignedAt DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id])
  post       Post     @relation(fields: [postId], references: [id])

  @@id([postId, categoryId])
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

model File {
  id            Int      @id @default(autoincrement())
  fileName      String
  originalName  String
  mimeType      String
  filePath      String
  thumbnailPath String?
  fileSize      Int
  userId        Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
}
